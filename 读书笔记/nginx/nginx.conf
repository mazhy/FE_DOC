
# user  root;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    server_names_hash_bucket_size 64;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"' 
                     '"$scheme://$host:$server_port$request_uri"'
                     '$scheme://$host:$server_port$request_uri';

    log_format hepeng '[$time_local] , $scheme://$host:$server_port$request_uri ,  $cookie_name';                 

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        # access_log  logs/host.access.log  main;

        location / {
            root   D:/dist/;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen       80;
        server_name  rabbitmq.my;

        #charset koi8-r;

        # access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://localhost:15672/;
            proxy_connect_timeout 20;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


    server {
        listen       80;
        server_name  hz-e450-server1;

        #charset koi8-r;

        # access_log  logs/host.access.log  main;

        # location /gateway/ {
        #     proxy_pass http://localhost:9998/;
        #     proxy_connect_timeout 20;
        # }

        # location /Dispatch/ {
        #     proxy_pass http://10.10.16.95/Dispatch/;
        #     proxy_connect_timeout 20;
        # }

        # location /SMP/ {
        #     proxy_pass http://10.10.16.95/SMP/;
        #     proxy_connect_timeout 20;
        # }

        # location /cas/ {
        #     proxy_pass http://10.10.16.95/cas/;
        #     proxy_connect_timeout 20;
        # }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    server {
        listen       443 ssl;
        server_name  www.microservice.com;
        ssl on;

        ssl_certificate      "D:/open source software/nginx-1.14.0/ssl/hepeng.crt";
        ssl_certificate_key  "D:/open source software/nginx-1.14.0/ssl/hepeng.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            root   html;
            index  index.html index.htm;
        }

    }

    upstream eureka-server {
        server 127.0.0.1:8081 weight=2;
        server 127.0.0.1:8082 weight=1;
        server 127.0.0.1:8083 weight=1;
    }

    # eureka server
    server {
        listen       443 ssl;
        server_name  eureka.microservice.com;
        ssl on;

        ssl_certificate      "D:/open source software/nginx-1.14.0/ssl/hepeng.crt";
        ssl_certificate_key  "D:/open source software/nginx-1.14.0/ssl/hepeng.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass http://eureka-server/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header GatewayRequestURI $scheme://$host:$server_port$request_uri;
        }

    }

    upstream api-gateway-server {
        server 127.0.0.1:8080 weight=1;
    }

    server {
        listen       443 ssl;
        server_name  gateway.microservice.com;
        ssl on;

        ssl_certificate      "D:/open source software/nginx-1.14.0/ssl/hepeng.crt";
        ssl_certificate_key  "D:/open source software/nginx-1.14.0/ssl/hepeng.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass http://api-gateway-server/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header GatewayRequestURI $scheme://$host:$server_port$request_uri;
        }

    }

    upstream time-service-server {
        server 127.0.0.1:9000 weight=1;
        server 127.0.0.1:9001 weight=2;
    }

    server {
        listen       443 ssl;
        server_name  time.microservice.com;
        ssl on;

        ssl_certificate      "D:/open source software/nginx-1.14.0/ssl/hepeng.crt";
        ssl_certificate_key  "D:/open source software/nginx-1.14.0/ssl/hepeng.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass http://time-service-server/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header GatewayRequestURI $scheme://$host:$server_port$request_uri;
        }

    }

    upstream auth-server {
        ip_hash;
        server 127.0.0.1:9100 weight=1;
        server 127.0.0.1:9101 weight=1;
    }

    server {
        listen       443 ssl;
        server_name  auth.microservice.com;
        ssl on;

        ssl_certificate      "D:/open source software/nginx-1.14.0/ssl/hepeng.crt";
        ssl_certificate_key  "D:/open source software/nginx-1.14.0/ssl/hepeng.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass https://auth-server/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header GatewayRequestURI $scheme://$host:$server_port$request_uri;
        }

    }

    upstream client-server {
        server 127.0.0.1:9002 weight=1;
    }

    server {
        listen       443 ssl;
        server_name  client.microservice.com;
        ssl on;

        ssl_certificate      "D:/open source software/nginx-1.14.0/ssl/hepeng.crt";
        ssl_certificate_key  "D:/open source software/nginx-1.14.0/ssl/hepeng.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass http://client-server/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header GatewayRequestURI $scheme://$host:$server_port$request_uri;
        }

    }

    # spring-cloud-demo-sleuth-zipkin server
    upstream zipkin-server {
        server 127.0.0.1:9200 weight=1;
    }

    server {
        listen       443 ssl;
        server_name  zipkin.microservice.com;
        ssl on;

        ssl_certificate      "D:/open source software/nginx-1.14.0/ssl/hepeng.crt";
        ssl_certificate_key  "D:/open source software/nginx-1.14.0/ssl/hepeng.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            proxy_pass http://zipkin-server/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header GatewayRequestURI $scheme://$host:$server_port$request_uri;
        }

    }


    # HZC  server
    server {
        listen       443 ssl;
        server_name  dev.hzc.com;
        ssl on;

        ssl_certificate      "D:/open source software/nginx-1.14.0/ssl/hepeng.crt";
        ssl_certificate_key  "D:/open source software/nginx-1.14.0/ssl/hepeng.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        # hzc gateway
        location /gateway/ {
            proxy_pass http://localhost:9999/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header OriginalRequestUrl $scheme://$host:$server_port$request_uri;
        }

        # hzc-auth service
        location /hzc-auth/ {
            proxy_pass http://127.0.0.1:3000/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header OriginalRequestUrl $scheme://$host:$server_port$request_uri;
        }

        # cas server
        location /cas/ {
            proxy_pass https://auth-server/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header OriginalRequestUrl $scheme://$host:$server_port$request_uri;
        }

    }


    # HZC  server 兼容 hz-e450-server1 主机名下的 cas 测试地址

    upstream biztest-server {
        # server 127.0.0.1:6000 weight=1;
        server 127.0.0.1:6001 weight=1;
    }


    server {
        listen       443 ssl;
        server_name  hz-e450-server1;
        ssl on;

        ssl_certificate      "D:/open source software/nginx-1.14.0/ssl/hepeng.crt";
        ssl_certificate_key  "D:/open source software/nginx-1.14.0/ssl/hepeng.key";

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        # hzc gateway
        location /gateway/ {
            proxy_pass http://localhost:9998/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header OriginalRequestUrl $scheme://$host:$server_port$request_uri;
            proxy_set_header Host $host:$server_port;
        }

        # cas server
        # location /cas/ {
        #     proxy_pass https://auth-server/;
        #     proxy_connect_timeout 10;
        #     proxy_redirect default;
        #     proxy_set_header OriginalRequestUrl $scheme://$host:$server_port$request_uri;
        # }

        location /biztest/ {
            proxy_pass http://biztest-server/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header OriginalRequestUrl $scheme://$host:$server_port$request_uri;
            proxy_set_header Host $host:$server_port;
        }

        location / {
            proxy_pass http://biztest-server/;
            proxy_connect_timeout 10;
            proxy_redirect default;
            proxy_set_header OriginalRequestUrl $scheme://$host:$server_port$request_uri;
            proxy_set_header Host $host:$server_port;
        }
    }

}
